---
# Tasks to install Jenkins as a Docker container as per https://www.jenkins.io/doc/book/installing/#docker
# Also performs some pre-requiste installations of pip  and packages to allow the Ansible Docker modules to work

- name: Ensure the EPEL repo is present
  yum:
    name: epel-release
    state: present

- name: Install pip
  yum:
    name: python-pip
    state: latest

- name: Install DockerPy module
  pip:
    name: docker

- name: Create Docker network
  docker_network:
    name: jenkins
    state: present

- name: Create Docker volumes
  docker_volume:
    name: "{{ item }}"
    state: present
  with_items:
    - jenkins-data
    - jenkins-docker-certs
    - artifactory-data

- name: Pull required Docker images
  docker_image:
    name: "{{ item }}"
    source: pull
  with_items:
    - docker
    - jenkins/jenkins:lts
    - docker.bintray.io/jfrog/artifactory-oss:latest

- name: Create temp directory for Jenkins container build
  file:
    path: ~/custom-jenkins
    state: directory
    mode: '0755'

- name: Copy the custom Dockerfile for Jenkins
  copy:
    src: files/custom-jenkins-Dockerfile
    dest: ~/custom-jenkins/Dockerfile
    mode: 0755

- name: Build custom container image which has more tools installed for building
  docker_image:
    build:
      path: ~/custom-jenkins
    name: jenkins-pro
    tag: latest
    source: build

- name: Start the Docker in Docker service for Jenkins to leverage
  docker_container:
    name: jenkins-docker
    state: started
    cleanup: yes
    privileged: yes
    purge_networks: yes
    networks:
      - name: jenkins
        aliases:
          - docker
    published_ports:
      - "2376:2376"
    detach: yes
    env:
      DOCKER_TLS_CERTDIR: "/certs"
    volumes:
      - jenkins-docker-certs:/certs/client
      - jenkins-data:/var/jenkins_home
    image: docker

- name: Start the Jenkins container
  docker_container:
    name: jenkins
    state: started
    cleanup: yes
    privileged: yes
    purge_networks: yes
    networks:
      - name: jenkins
    published_ports:
      - "8080:8080"
      - "50000:50000"
    detach: yes
    env:
      DOCKER_HOST: "tcp://docker:2376"
      DOCKER_CERT_PATH: "/certs/client"
      DOCKER_TLS_VERIFY: "1"
    volumes:
      - jenkins-docker-certs:/certs/client:ro
      - jenkins-data:/var/jenkins_home
    image: jenkins-pro

- name: Start the Artifactory container
  docker_container:
    name: artifactory
    state: started
    cleanup: yes
    privileged: yes
    purge_networks: yes
    networks:
      - name: jenkins
    published_ports:
      - "8081:8081"
      - "8082:8082"
    detach: yes
    volumes:
      - artifactory-data:/var/opt/jfrog/artifactory
    image: docker.bintray.io/jfrog/artifactory-oss:latest

- name: Cleanup build directory for custom container
  file:
    path: ~/custom-jenkins
    state: absent